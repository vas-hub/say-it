/** @type { import('eslint').Linter.Config } */
module.exports = {
  root: true,
  env: {
    browser: true,
    es2021: true,
    node: true,
  },
  extends: [
    'prettier',
    'plugin:@typescript-eslint/eslint-recommended',
    'plugin:@typescript-eslint/recommended',
  ],
  parser: '@typescript-eslint/parser',
  parserOptions: {
    tsconfigRootDir: __dirname,
    sourceType: 'module',
    project: ['./tsconfig.json'],
  },
  plugins: ['@typescript-eslint'],
  rules: {
    'getter-return': 'warn',
    'no-class-assign': 'warn',
    'no-cond-assign': 'warn',
    'no-duplicate-case': 'warn',
    'no-empty-character-class': 'warn',
    'no-ex-assign': 'warn',
    'no-func-assign': 'warn',
    'no-invalid-regexp': 'warn',
    'no-new-symbol': 'warn',
    'no-setter-return': 'warn',
    'no-unreachable': 'warn',
    'no-unsafe-negation': 'warn',
    'no-unsafe-optional-chaining': 'warn',
    'no-unused-private-class-members': 'warn',
    'arrow-body-style': ['warn', 'as-needed'],
    camelcase: 'warn',
    'capitalized-comments': [
      'warn',
      'always',
      { ignoreConsecutiveComments: true },
    ],
    'consistent-this': ['warn', 'self'],
    'default-case': 'warn',
    'default-case-last': 'warn',
    curly: ['warn', 'multi'],
    eqeqeq: ['warn', 'always'],
    'max-params': ['warn', 3],
    'no-empty': 'warn',
    'no-global-assign': 'warn',
    'no-lone-blocks': 'warn',
    'no-var': 'warn',
    'prefer-template': 'warn',
    'quote-props': ['warn', 'as-needed'],
    'spaced-comment': ['warn', 'always'],
    'array-bracket-spacing': ['warn', 'never'],
    'arrow-parens': ['warn', 'as-needed'],
    'arrow-spacing': ['warn', { before: true, after: true }],
    'block-spacing': ['warn', 'always'],
    'brace-style': ['warn', '1tbs', { allowSingleLine: true }],
    'comma-dangle': [
      'warn',
      {
        arrays: 'always-multiline',
        objects: 'always-multiline',
        imports: 'always-multiline',
        exports: 'never',
        functions: 'never',
      },
    ],
    'comma-spacing': ['warn', { before: false, after: true }],
    'comma-style': ['warn', 'last'],
    'eol-last': ['warn', 'always'],
    // indent: [
    //   'warn',
    //   2,
    //   { ignoredNodes: ['ConditionalExpression', 'TemplateLiteral > *'] },
    // ],
    'keyword-spacing': ['warn', { before: true, after: true }],
    'semi-spacing': ['warn', { before: false, after: true }],
    'semi-style': ['warn', 'last'],
    'space-before-blocks': ['warn', 'always'],
    'space-before-function-paren': [
      'warn',
      {
        anonymous: 'always',
        named: 'never',
        asyncArrow: 'always',
      },
    ],
    'switch-colon-spacing': ['warn', { after: true, before: false }],
    'wrap-regex': 'warn',
  },
};
